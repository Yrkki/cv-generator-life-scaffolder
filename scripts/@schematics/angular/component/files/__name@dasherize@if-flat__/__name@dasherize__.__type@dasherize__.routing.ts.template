import { Component<% if(changeDetection !== 'Default') { %>, ChangeDetectionStrategy<% }%> } from '@angular/core';
import { <%= classify(name) %><%= classify(type) %> as I<%= classify(name) %><%= classify(type) %> } from './<%= dasherize(name) %><%= type ? '.' + dasherize(type): '' %>';

/**
 * <%= classify(name) %><%= classify(type) %> routing component.
 * Separates routing concerns within the components tier by extending the original component of the same name.
 * ~extends I<%= classify(name) %><%= classify(type) %>
 */
@Component({<% if(!skipSelector) {%>
  selector: '<%= selector %>',<%}%><% if(inlineTemplate) { %>
  template: `
    <p>
      <%= dasherize(name) %> works!
    </p>
  `,<% } else { %>
  templateUrl: './<%= dasherize(name) %><%= type ? '.' + dasherize(type): '' %>.html',<% } if(inlineStyle) { %>
  styles: [<% if(displayBlock){ %>
    `
      :host {
        display: block;
      }
    `<% } %>
  ]<% } else { %>
  styleUrls: ['./<%= dasherize(name) %><%= type ? '.' + dasherize(type): '' %>.<%= style %>']<% } %><% if(!!viewEncapsulation) { %>,
  encapsulation: ViewEncapsulation.<%= viewEncapsulation %><% } if (changeDetection !== 'Default') { %>,
  changeDetection: ChangeDetectionStrategy.<%= changeDetection %><% } %>
})
export class <%= classify(name) %><%= classify(type) %> extends I<%= classify(name) %><%= classify(type) %> { }
